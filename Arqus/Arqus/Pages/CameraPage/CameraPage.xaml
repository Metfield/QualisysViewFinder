<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ui="clr-namespace:Arqus.UI"
             xmlns:urho="clr-namespace:Urho.Forms;assembly=Urho.Forms"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             prism:ViewModelLocator.AutowireViewModel="True"          
             x:Class="Arqus.CameraPage" >

    <ContentPage.ToolbarItems>
       
        <ui:BindableToolbarItem Command="{Binding SetCameraScreenLayoutCommand}" IsVisible="{Binding IsGridLayoutActive, Converter={StaticResource InverseBoolConverter}}">
            <ToolbarItem.Icon>
                <OnPlatform x:TypeArguments="FileImageSource"
                                Android="drawable-hdpi/ic_grid_on_white_24dp.png"/>
            </ToolbarItem.Icon>
        </ui:BindableToolbarItem>
        <ui:BindableToolbarItem Command="{Binding SetCameraScreenLayoutCommand}" IsVisible="{Binding IsGridLayoutActive}">
            <ToolbarItem.Icon>
                <OnPlatform x:TypeArguments="FileImageSource"
                                Android="drawable-hdpi/ic_view_carousel_white_24dp.png"/>
            </ToolbarItem.Icon>
        </ui:BindableToolbarItem>
    </ContentPage.ToolbarItems>

    
    <StackLayout Margin="0" Style="{StaticResource Background}">


        <Frame Style="{StaticResource AppBar}" Padding="0" IsVisible="{Binding IsGridLayoutActive, Converter={StaticResource InverseBoolConverter}}">
            <Grid VerticalOptions="End">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>


                <StackLayout Grid.Row="0" Grid.Column="0"
                             BackgroundColor="{Binding CurrentCamera.Mode, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter=ModeMarker}">
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer
                        Command="{Binding SetCameraModeToMarkerCommand}"  />
                    </StackLayout.GestureRecognizers>
                    <Image  Source="drawable-hdpi/ic_grain_white_24dp.png" VerticalOptions="Start" />
                    <Label Text="Marker" Style="{StaticResource SecondaryText}" FontSize="Micro" VerticalOptions="End" HorizontalOptions="Center"/>
                </StackLayout>

                <StackLayout Grid.Row="0" Grid.Column="1" 
                             BackgroundColor="{Binding CurrentCamera.Mode, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter=ModeVideo}">
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer
                            Command="{Binding SetCameraModeToVideoCommand}"  />
                    </StackLayout.GestureRecognizers>
                    <Image Source="drawable-hdpi/ic_camera_white_24dp.png" VerticalOptions="Start" />
                    <Label Text="Video" Style="{StaticResource SecondaryText}" FontSize="Micro" VerticalOptions="End" HorizontalOptions="Center"/>
                </StackLayout>
                
                <StackLayout Grid.Row="0" Grid.Column="2"
                             BackgroundColor="{Binding CurrentCamera.Mode, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter=ModeMarkerIntensity}" >
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer
                            Command="{Binding SetCameraModeToIntensityCommand}"  />
                    </StackLayout.GestureRecognizers>
                    <Image  Source="drawable-hdpi/ic_exposure_white_24dp.png" VerticalOptions="Start" />
                    <Label Text="Intensity" Style="{StaticResource SecondaryText}" FontSize="Micro" VerticalOptions="End" HorizontalOptions="Center" />
                </StackLayout>
            </Grid>
        </Frame>


        <urho:UrhoSurface x:Name="urhoSurface" VerticalOptions="FillAndExpand" />


    <!-- Drawers layout -->
        <StackLayout VerticalOptions="End" IsEnabled="True" Margin="0" Padding="0">
            
            <!-- Marker-specific drawer -->
            <Frame Style="{StaticResource Card}" HorizontalOptions="Fill" IsVisible="{Binding IsGridLayoutActive, Converter={StaticResource InverseBoolConverter}}" Margin="0" CornerRadius="0" >
                <StackLayout>
                    <StackLayout VerticalOptions="StartAndExpand" IsVisible="{Binding IsMarkerMode}">

                        <StackLayout HorizontalOptions="Fill">
                            <Label Text="Marker Exposure" HorizontalOptions="Start"/>
                            <Label BindingContext="{x:Reference Name=markerExposureSlider}" Text="{Binding Path=Value}" HorizontalOptions="End"/>
                        </StackLayout>

                        <Slider x:Name="markerExposureSlider"
                                HorizontalOptions="Fill" 
                                Maximum="{Binding CurrentCamera.Settings.MarkerExposure.Max}" 
                                Minimum="{Binding CurrentCamera.Settings.MarkerExposure.Min}"
                                Value="{Binding CurrentCamera.Settings.MarkerExposure.Current}" />

                        <StackLayout HorizontalOptions="Fill">
                            <Label Text="Marker Threshold"/>
                            <Label BindingContext="{x:Reference Name=markerThresholdSlider}" Text="{Binding Path=Value}" HorizontalOptions="End"/>
                        </StackLayout>

                        <Slider x:Name="markerThresholdSlider"
                                HorizontalOptions="Fill" 
                                Maximum="{Binding CurrentCamera.Settings.MarkerThreshold.Max}"
                                Minimum="{Binding CurrentCamera.Settings.MarkerThreshold.Min}"
                                Value="{Binding CurrentCamera.Settings.MarkerThreshold.Current}" />
                    </StackLayout>

                    <StackLayout VerticalOptions="StartAndExpand" IsVisible="{Binding IsVideoMode}">

                        <StackLayout HorizontalOptions="Fill">
                            <Label Text="Video Exposure"/>
                            <Label BindingContext="{x:Reference Name=videoExposureSlider}" Text="{Binding Path=Value}" HorizontalOptions="End"/>
                        </StackLayout>

                        <Slider x:Name="videoExposureSlider"
                                HorizontalOptions="Fill" 
                                Maximum="{Binding CurrentCamera.Settings.VideoExposure.Max}" 
                                Minimum="{Binding CurrentCamera.Settings.VideoExposure.Min}"
                                Value="{Binding CurrentCamera.Settings.VideoExposure.Current}" />

                        <StackLayout HorizontalOptions="Fill">
                            <Label Text="Video Flash"/>
                            <Label BindingContext="{x:Reference Name=videoFlashTimeSlider}" Text="{Binding Path=Value}" HorizontalOptions="End"/>
                        </StackLayout>

                        <Slider x:Name="videoFlashTimeSlider"
                                HorizontalOptions="Fill" 
                                Maximum="{Binding CurrentCamera.Settings.VideoFlashTime.Max}" 
                                Minimum="{Binding CurrentCamera.Setttings.VideoFlashTime.Min}"
                                Value="{Binding CurrentCamera.Settings.VideoFlashTime.Current}" />

                    </StackLayout>

                </StackLayout>
                
            </Frame>

        </StackLayout>


    </StackLayout>

</ContentPage>